import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";
import latestIssueFragment from "../graphql/fragments/magazine-latest-issue";
import GAM from "../../config/gam";
import nxConfig from "../../config/native-x";

$ const { site, config } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-leaderboard":     GAM.getAdUnit({ name: "leaderboard", aliases }),
        "gpt-ad-home-skyscraper": GAM.getAdUnit({ name: "skyscraper", aliases, size: [300, 600] }),
      };
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-gam-display-ad id="gpt-ad-leaderboard" modifiers=["above-container"] />
    <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-top-below-head" modifiers=["above-container"] />
  </@above-container>
  <@page>
    <marko-web-query|{ nodes }|
      name="all-published-content"
      params={ limit: 5, requiresImage: true, queryFragment }
    >
      <website-content-hero-flow nodes=nodes />
    </marko-web-query>
    <marko-web-query|{ nodes }|
      name="all-published-content"
      params={ limit: 6, skip: 5, requiresImage: true, queryFragment }
    >
      <default-theme-card-deck-flow cols=3 nodes=nodes>
        <@slot|{ node, index }|>
          <website-content-card-node
            image-width=340
            node=node
          />
        </@slot>
      </default-theme-card-deck-flow>
    </marko-web-query>
    <!-- <marko-web-page-wrapper>
      <@section>
        <div class="row">
          <div class="col">
            <div class="leaders-index-page__header-wrapper">
              <div class="leaders-index-page__logo">
                <marko-web-img
                  src=site.get("leaders.header.imgSrc")
                  alt=site.get("leaders.title")
                />
              </div>
              <div class="leaders-index-page__header">
                <h1 class="leaders-index-page__title">
                  ${site.get("leaders.title")}
                </h1>
                <div class="leaders-index-page__description">
                  <p>Welcome to <em>${config.siteName()}'s</em> ${site.get("leaders.title")} program.</p>
                </div>
              </div>
              <div class="leaders-index-page__body">
                <p>Description</p>
              </div>
            </div>
          </div>
        </div>
        <common-leaders-all />
      </@section>
    </marko-web-page-wrapper> -->
    <marko-web-query|{ nodes }|
      name="all-published-content"
      params={ limit: 12, skip: 11, requiresImage: true, queryFragment }
    >
      <website-content-card-deck-flow nodes=nodes >
      </website-content-card-deck-flow>
    </marko-web-query>
    <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-bottom-wide" />

  </@page>
  <!-- <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="all-published-content"
        query-params={ limit: 12, skip: 23, requiresImage: true }
        max-pages=0
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page> -->
</marko-web-website-section-page-layout>

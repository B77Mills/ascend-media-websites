import { getAsObject, get } from "@base-cms/object-path";
import queryFragment from "../../../graphql/fragments/content-hero";

$ const { sectionId } = input;

$ const queryParams = {
  optionName: "Pinned",
  limit: 5,
  requiresImage: true,
  queryFragment,
  sectionBubbling: false,
  ...getAsObject(input, "queryParams"),
  sectionId,
};

<marko-web-query|{ nodes }| name="website-optioned-content" params=queryParams>
  <default-theme-hero-flow nodes=nodes>
    <@hero|{ node: content }|>
      $ const primaryImage = getAsObject(content, "primaryImage");
      <marko-web-node
        type=`${content.type}-content`
        image-position="top"
        card=true
        flush=true
        full-height=false
        modifiers=["hero"]
      >
        <@header>
          <@left|{ blockName }|>
            <marko-web-content-short-name obj=content block-name=blockName link=true />
          </@left>
        </@header>
        <@image
          ar="16:9"
          width="630"
          fluid=true
          use-placeholder=false
          src=primaryImage.src
          alt=primaryImage.alt
          is-logo=primaryImage.isLogo
          link={ href: get(content, "siteContext.path") }
        >
          <@body>
            <@text modifiers=["teaser"] show=Boolean(content.teaser)>
              <marko-web-content-teaser tag=null obj=content link=true />
            </@text>
          </@body>
        </@image>
      </marko-web-node>

      $ console.log(content);
      <!-- <shared-content-card-node ...input.card node=node>
        <@image width=630 />
        <@title modifiers=["large"] />
      </shared-content-card-node> -->
    </@hero>
    <!-- <@list|{ nodes }|>
      <shared-content-list-flow ...input.list nodes=nodes />
    </@list> -->
  </default-theme-hero-flow>
</marko-web-query>

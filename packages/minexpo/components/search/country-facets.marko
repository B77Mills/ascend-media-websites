import { getAsObject, getAsArray } from "@parameter1/base-cms-object-path";
import { buildContentQuery } from "./queries";

$ const { $algolia, apollo, config } = out.global;

$ const now = Math.floor(Date.now() / 1000);
$ const getfacetFilters = () => {
  const filters = [
    `websiteSchedules.siteIds:${config.website("id")}`,
  ]
  if (input.sectionIds) {
    const sectionFilters = [];
    input.sectionIds.forEach((id) => {
      sectionFilters.push(`websiteSchedules.sectionIds:${id}`);
    });
    filters.push(sectionFilters);
  }
  filters.push('type:Company')
  return filters;
}
$ const ranking = 'name';
$ const options = {
  attributesToRetrieve: ["objectID"],
  length: 1,
  offset: 0,
  facets: [
    'country'
  ],
  numericFilters: [
    'status = 1',
    `published < ${now}`,
  ],
  facetFilters: getfacetFilters(),
};
$ const defaultIndexName = $algolia.defaultIndex.indexName;
$ $algolia.defaultIndex.indexName = `${$algolia.defaultIndex.indexName}_name_asc`;
$ const algoliaPromise = $algolia.defaultIndex.search(input.phrase || "", options);
$ $algolia.defaultIndex.indexName = defaultIndexName;
<marko-web-resolve|{ resolved }| promise=algoliaPromise>
  $ const { facets } = resolved;
  $ const countries = facets.country ? Object.keys(facets.country) : [];
  <${input.renderBody} countries=countries />
</marko-web-resolve>

import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../../../graphql/fragments/content-list";
import { get, getAsObject } from "@base-cms/object-path";

$ const { issue } = input;
$ const { GAM } = out.global;
$ const adSlots = ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-lb2": GAM.getAdUnit({ name: "lb2", aliases }),
  "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases }),
  "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases }),
});

<marko-web-page-wrapper class="mb-block">
  <@section>
    <marko-web-gam-display-ad
      id="gpt-ad-lb1"
      slots=adSlots
      modifiers=["max-width-970", "center"]
    />
  </@section>
  <@section>
    <div class="row">
      <div class="col">
        <h1 class="page-wrapper__title">${issue.name}</h1>
        <if(issue.description)>
          <p class="page-wrapper__deck">${issue.description}</p>
        </if>
      </div>
    </div>
  </@section>

  <@section>
    <marko-web-query|{ nodes }| name="magazine-scheduled-content" collapsible=false params={ issueId: issue.id, limit: 3, queryFragment }>
      <default-theme-hero-flow nodes=nodes>
        <@hero|{ node }|>
          <default-theme-card-deck-flow cols=1 nodes=[node]>
            <@slot|{ node, index }|>
              <bulletin-content-hero-node node=node with-attribution=true />
            </@slot>
          </default-theme-card-deck-flow>
        </@hero>
        <@list|{ nodes }|>
          <div class="node-list__header">
            The Leading Edge
          </div>
          <if(nodes.length)>
            <default-theme-card-deck-flow cols=1 nodes=nodes>
              <@slot|{ node, index }|>
                <bulletin-content-list-node node=node with-attribution=true image-position="right" with-teaser=true />
              </@slot>
            </default-theme-card-deck-flow>

          </if>
        </@list>
      </default-theme-hero-flow>
    </marko-web-query>
  </@section>

  <@section>
    <marko-web-gam-display-ad
      id="gpt-ad-lb1"
      slots=adSlots
      modifiers=["max-width-970", "center"]
    />
  </@section>
  <if(GAM.enabled !== false)>

    <@section>
      <marko-web-query|{ nodes }|
        name="magazine-scheduled-content"
        params={ issueId: issue.id, limit: 8, skip: 3, queryFragment }
      >
        <default-theme-card-deck-flow cols=3 nodes=nodes>
          <@slot|{ node, index }|>
            <bulletin-content-card-node node=node with-attribution=false />
          </@slot>
          <@slot position="after" index=0>
            <marko-web-gam-display-ad id="gpt-ad-rail1" modifiers=["in-card"] />
          </@slot>
        </default-theme-card-deck-flow>
      </marko-web-query>
    </@section>

    <@section>
      <marko-web-gam-display-ad
        id="gpt-ad-lb1"
        slots=adSlots
        modifiers=["max-width-970", "center"]
      />
    </@section>

    <@section>
      <marko-web-query|{ nodes }|
        name="magazine-scheduled-content"
        params={ issueId: issue.id, limit: 8, skip: 11, queryFragment }
      >
        <default-theme-card-deck-flow cols=3 nodes=nodes>
          <@slot|{ node, index }|>
            <bulletin-content-card-node node=node with-attribution=false />
          </@slot>
          <@slot position="after" index=3>
            <marko-web-gam-display-ad id="gpt-ad-rail1" modifiers=["in-card"] />
          </@slot>
        </default-theme-card-deck-flow>
      </marko-web-query>
    </@section>
    </if>
    <else>
      <@section>
        <marko-web-query|{ nodes }|
          name="magazine-scheduled-content"
          params={ issueId: issue.id, limit: 100, skip: 3, queryFragment }
        >
          <default-theme-card-deck-flow cols=3 nodes=nodes>
            <@slot|{ node, index }|>
              <bulletin-content-card-node node=node with-attribution=false />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>
      </@section>
    </else>
</marko-web-page-wrapper>
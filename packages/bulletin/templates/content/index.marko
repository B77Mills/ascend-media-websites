import { get } from "@parameter1/base-cms-object-path";
import contentLatestIssueWithContentLoader from "../../loaders/content-latest-issue-with-content";

$ const { apollo } = out.global;
$ const { id, type, pageNode } = data;
$ const issuePromise = contentLatestIssueWithContentLoader(apollo, { contentId: id });

<marko-web-content-page-layout id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-gam-targeting key-values={ cont_id: id, cont_type: type } />
  </@head>

  <@page>
    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <default-theme-page-contents|{ blockName }|
              class="col-lg-8 mb-3 mb-lg-0"
              modifiers=[type]
              attrs={ "data-gallery-id": id }
            >
              <marko-web-element name="content-header" block-name=blockName>
                <div class="page-wrapper__published">
                  Published:
                  <marko-web-content-published tag="span" obj=content />
                </div>
                <hr class="page-wrapper__above-title">
                <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
                <default-theme-content-attribution obj=content />
                <hr>
              </marko-web-element>
              $ const bodyId = `content-body-${id}`;
              <marko-web-content-body block-name=blockName obj=content attrs={ id: bodyId } />
              <marko-web-content-sidebars block-name=blockName obj=content />
            </default-theme-page-contents>

            <aside class="col-lg-4 page-rail">
              <marko-web-resolve|{ resolved }| promise=issuePromise>
                $ const { issue, issueContent } = resolved;
                <if(issue)>
                  <shared-content-list-flow
                    nodes=issueContent.nodes.slice(0,3)
                    inner-justified=false
                    flush-x=false
                    flush-y=false
                  >
                    <@header>More Articles</@header>
                    <@node with-dates=false with-teaser=false display-image=false with-attribution=false with-section=false>
                      <@title modifiers=["small"] />
                    </@node>
                  </shared-content-list-flow>
                  <bulletin-magazine-latest-issue-node card=true flush=false card=false node=issue />
                </if>
              </marko-web-resolve>
            </aside>
          </div>
        </@section>
        <@section>
          <marko-web-resolve|{ resolved }| promise=issuePromise>
            $ const { issue, issueContent } = resolved;
            <if(issue)>
              <hr />
              <div class="page-wrapper__title--issue-name">More from ${issue.name}</div>
              <hr class="page-wrapper__above-title">
              <default-theme-card-deck-flow cols=3 nodes=issueContent.nodes.slice(3)>
                <@slot|{ node, index }|>
                  <shared-content-card-node node=node with-section=false with-attribution=false />
                </@slot>
              </default-theme-card-deck-flow>
            </if>
          </marko-web-resolve>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
</marko-web-content-page-layout>
